package NGCP::Panel::Utils::DbStrings;

use warnings;
use strict;

sub localize {

    $c->loc("Lock Level");
    $c->loc('See "lock_voip_account_subscriber" for a list of possible values. A lock value of "none" will not be returned to the caller. Read-only setting.');
    $c->loc("Block Mode for inbound calls");
    $c->loc('Specifies the operational mode of the incoming block list. If unset or set to a false value, it is a blacklist (accept all calls except from numbers listed in the block list), with a true value it is a whitelist (reject all calls except from numbers listed in the block list).');
    $c->loc("Block List for inbound calls");
    $c->loc('Contains wildcarded SIP usernames (the localpart of the whole SIP URI, eg., "user" of SIP URI "user@example.com") that are (not) allowed to call the subscriber. "*", "?" and "x-y" with "x" and "y" representing numbers from 0 to 9 may be used as wildcards like in shell patterns.');
    $c->loc("Block anonymous inbound calls");
    $c->loc('Incoming anonymous calls (with calling line identification restriction) are blocked if set to true.');
    $c->loc("Block Mode for outbound calls");
    $c->loc('Specifies the operational mode of the outgoing block list. If unset or set to a false value, it is a blacklist (allow all calls except to numbers listed in the block list), with a true value it is a whitelist (deny all calls except to numbers listed in the block list).');
    $c->loc("Block List for outbound calls");
    $c->loc('Contains wildcarded SIP usernames (the localpart of the whole SIP URI, eg., "user" of SIP URI "user@example.com") that are (not) allowed to be called by the subscriber. "*", "?" and "x-y" with "x" and "y" representing numbers from 0 to 9 may be used as wildcards like in shell patterns.');
    $c->loc("Administrative Block Mode for inbound calls");
    $c->loc('Same as "block_in_mode" but may only be set by administrators.');
    $c->loc("Administrative Block List for inbound calls");
    $c->loc('Same as "block_in_list" but may only be set by administrators and is applied prior to the user setting.');
    $c->loc("Administratively block anonymous inbound calls");
    $c->loc('Same as "block_in_clir" but may only be set by administrators and is applied prior to the user setting.');
    $c->loc("Administrative Block Mode for outbound calls");
    $c->loc('Same as "block_out_mode" but may only be set by administrators.');
    $c->loc("Administrative Block List for outbound calls");
    $c->loc('Same as "block_out_list" but may only be set by administrators and is applied prior to the user setting.');
    $c->loc("Internal Call Forward Unconditional #");
    $c->loc('The id pointing to the "Call Forward Unconditional" entry in the voip_cf_mappings table');
    $c->loc("Internal Call Forward Busy map #");
    $c->loc('The id pointing to the "Call Forward Busy" entry in the voip_cf_mappings table');
    $c->loc("Internal Call Forward Unavailable #");
    $c->loc('The id pointing to the "Call Forward Unavailable" entry in the voip_cf_mappings table');
    $c->loc("Internal Call Forward Timeout #");
    $c->loc('The id pointing to the "Call Forward Timeout" entry in the voip_cf_mappings table');
    $c->loc("Ring Timeout for CFT");
    $c->loc('Specifies how many seconds the system should wait before redirecting the call if "cft" is set.');
    $c->loc("Network-Provided CLI");
    $c->loc('SIP username (the localpart of the whole SIP URI, eg., "user" of SIP URI "user@example.com"). "network-provided calling line identification" - specifies the SIP username that is used for outgoing calls in the SIP "From" and "P-Asserted-Identity" headers (as user- and network-provided calling numbers). The content of the "From" header may be overridden by the "user_cli" preference and client (if allowed by the "allowed_clis" preference) SIP signalling. Automatically set to the primary E.164 number specified in the subscriber details.');
    $c->loc("Hide own number for outbound calls");
    $c->loc('"Calling line identification restriction" - if set to true, the CLI is not displayed on outgoing calls.');
    $c->loc("Country Code");
    $c->loc('The country code that will be used for routing of dialed numbers without a country code. Defaults to the country code of the E.164 number if the subscriber has one.');
    $c->loc("Area Code");
    $c->loc('The area code that will be used for routing of dialed numbers without an area code. Defaults to the area code of the E.164 number if the subscriber has one.');
    $c->loc("Emergency Prefix variable");
    $c->loc('A numeric string intended to be used in rewrite rules for emergency numbers.');
    $c->loc("Internal NCOS Level #");
    $c->loc("Internal Administrative NCOS Level #");
    $c->loc("NCOS Level");
    $c->loc('Specifies the NCOS level that applies to the user.');
    $c->loc("Administrative NCOS Level");
    $c->loc('Same as "ncos", but may only be set by administrators and is applied prior to the user setting.');
    $c->loc("PIN to bypass outbound Block List");
    $c->loc('A PIN code which may be used in a VSC to disable the outgoing user block list and NCOS level for a call.');
    $c->loc("Administrative PIN to bypass outbound Block List");
    $c->loc('Same as "block_out_override_pin" but additionally disables the administrative block list and NCOS level.');
    $c->loc("Peer Authentication User");
    $c->loc('A username used for authentication against the peer host.');
    $c->loc("Peer Authentication Password");
    $c->loc('A password used for authentication against the peer host.');
    $c->loc("Allow inbound calls from foreign subscribers");
    $c->loc('Allow unauthenticated inbound calls from FOREIGN domain to users within this domain. Use with care - it allows to flood your users with voice spam.');
    $c->loc("Peer Authentication Domain");
    $c->loc('A realm (hostname) used to identify and for authentication against a peer host.');
    $c->loc("Enable Peer Authentication");
    $c->loc('Specifies whether registration at the peer host is desired.');
    $c->loc("Total max of overall concurrent calls");
    $c->loc('Maximum number of concurrent sessions (calls) for a subscriber or peer.');
    $c->loc("Total max of outbound concurrent calls");
    $c->loc('Maximum number of concurrent outgoing sessions (calls) coming from a subscriber or going to a peer.');
    $c->loc("Allowed CLIs for outbound calls");
    $c->loc('A list of shell patterns specifying which CLIs are allowed to be set by the subscriber. "*", "?" and "x-y" with "x" and "y" representing numbers from 0 to 9 may be used as wildcards as usual in shell patterns.');
    $c->loc("Internal Contract #");
    $c->loc("External Contract #");
    $c->loc("External Subscriber #");
    $c->loc("Find Subscriber by UUID");
    $c->loc('For incoming calls from this peer, find the destination subscriber by a uuid parameter in R-URI which has been sent in Contact at outbound registration.');
    $c->loc("Rewrite Rule Set");
    $c->loc('Specifies the list of caller and callee rewrite rules which should be applied for incoming and outgoing calls.');
    $c->loc("Internal # for inbound caller rewrite rule set");
    $c->loc("Internal # for inbound callee rewrite rule set");
    $c->loc("Internal # for outbound caller rewrite rule set");
    $c->loc("Internal # for outbound callee rewrite rule set");
    $c->loc("Use Number instead of Contact first for outbound calls");
    $c->loc('Send the E164 number instead of SIP AOR as request username when sending INVITE to the subscriber. If a 404 is received the SIP AOR is sent as request URI as fallback.');
    $c->loc("User-Provided Number");
    $c->loc('SIP username (the localpart of the whole SIP URI, eg., "user" of SIP URI "user@example.com"). "user-provided calling line identification" - specifies the SIP username that is used for outgoing calls. If set, this is put in the SIP "From" header (as user-provided calling number) if a client sends a CLI which is not allowed by "allowed_clis" or if "allowed_clis" is not set.');
    $c->loc("Enable Prepaid");
    $c->loc("Force inbound calls to peer");
    $c->loc('Force calls to this user to be treated as if the user was not local. This helps in migration scenarios.');
    $c->loc("Emergency Suffix variable");
    $c->loc('A numeric string intended to be used in rewrite rules for emergency numbers.');
    $c->loc("Enable Session-Timers");
    $c->loc('Enable SIP Session Timers.');
    $c->loc("Session-Timer Refresh Interval");
    $c->loc('SIP Session Timers refresh interval (seconds). Should be always greater than min_timer preference. SBC will make refresh at the half of this interval.');
    $c->loc("Session-Timer Min Refresh Interval");
    $c->loc('Set Min-SE value in SBC. This is also used to build 422 reply if remote Min-SE is smaller than local Min-SE.');
    $c->loc("Session-Timer Max Refresh Interval");
    $c->loc('Sets upper limit on accepted Min-SE value in in SBC.');
    $c->loc("Session-Timer Refresh Method");
    $c->loc('SIP Session Timers refresh method.');
    $c->loc("System Sound Set");
    $c->loc('Sound Set used for system prompts like error announcements etc.');
    $c->loc("Reject Emergency Calls");
    $c->loc('Reject emergency calls from this user or domain.');
    $c->loc("Emergency CLI");
    $c->loc('SIP username (the localpart of the whole SIP URI, eg., "user" of SIP URI "user@example.com"). Emergency CLI which can be used in rewrite rules as substitution value.');
    $c->loc("Force outbound call via socket");
    $c->loc('Outbound socket to be used for SIP communication to this entity');
    $c->loc("Inbound User-Provided Number");
    $c->loc('The SIP header field to fetch the user-provided-number from for inbound calls');
    $c->loc("Inbound Network-Provided Number");
    $c->loc('The SIP header field to fetch the network-provided-number from for inbound calls');
    $c->loc("Outbound From-Username Field");
    $c->loc('The content to put into the From username for outbound calls from the platform to the subscriber');
    $c->loc("Outbound From-Display Field");
    $c->loc('The content to put into the From display-name for outbound calls from the platform to the subscriber');
    $c->loc("Outbound PAI-Username Field");
    $c->loc('The content to put into the P-Asserted-Identity username for outbound calls from the platform to the subscriber (use "None" to not set header at all)');
    $c->loc("Outbound PPI-Username Field");
    $c->loc('The content to put into the P-Preferred-Identity username for outbound calls from the platform to the subscriber (use "None" to not set header at all)');
    $c->loc("Enable Apple/Google Mobile Push");
    $c->loc('Send inbound call to Mobile Push server when called subscriber is not registered. This can not be used together with CFNA as call will be then simply forwarded.');
    $c->loc("Use valid Alias CLI as NPN");
    $c->loc('Search for partial match of user-provided number (UPN) to subscriber\'s  primary E164 number and aliases. If it mathes, take UPN as valid wihout allowed_clis check and copy UPN to network-provided number (NPN).');
    $c->loc("Total max of overall calls of Customer");
    $c->loc('Maximum number of concurrent sessions (calls) for subscribers within the same account');
    $c->loc("Total max of outbound calls of Customer");
    $c->loc('Maximum number of concurrent outgoing sessions (calls) for subscribers within the same account');
    $c->loc("Inbound User-Provided Redirecting Number");
    $c->loc('Specifies the way to obtain the User-Provided Redirecting CLI. Possible options are use NPN of forwarding subscriber or respect inbound Diversion header. Same validation rules as for UPN apply to UPRN. NGCP does not stack UPRNs up if the call is forwarded several times.');
    $c->loc("Outbound Diversion Header");
    $c->loc('The content to put into the Diversion header for outbound calls (use "None" to not set header at all)');
    $c->loc("Internal allowed source IP group #");
    $c->loc('Group of addresses and/or IP nets allowed access.');
    $c->loc("Internal manual allowed source IP group #");
    $c->loc('Group of addresses and/or IP nets allowed access.');
    $c->loc("Allowed source IPs");
    $c->loc('Allow access from the given list of IP addresses and/or IP nets.');
    $c->loc("Manually defined allowed source IPs");
    $c->loc('Allow access from the given list of IP addresses and/or IP nets.');
    $c->loc("Ignore allowed IPs");
    $c->loc('Ignore preferences "allowed_ips" and "man_allowed_ips".');
    $c->loc("Disable NAT SIP pings");
    $c->loc('Don\'t do NAT ping for domain/user. Use with caution: this only makes sense on the access network which does not need pings (e.g. CDMA)');
    $c->loc("IP Header Field");
    $c->loc('The SIP header to take the IP address for logging it into CDRs.');
    $c->loc("RTP-Proxy Mode");
    $c->loc('Set RTP relay mode for this peer/domain/user');
    $c->loc("IPv4/IPv6 briding mode");
    $c->loc('Choose the logic of IPv4/IPv6 autodetection for the RTP relay');
    $c->loc("Allow calls to foreign domains");
    $c->loc('Allow outbound calls of local subscribers to foreign domains');
    $c->loc("Mobile Push Expiry Timeout");
    $c->loc('The expiry interval of sent push request. Client is expected to register within this time, otherwise he should treat the request as outdated and ignore.');
    $c->loc("CloudPBX Subscriber");
    $c->loc('Send the calls from/to the subscribers through the cloud pbx module.');
    $c->loc("SRTP Transcoding Mode");
    $c->loc('Choose the logic for RTP/SRTP transcoding (SAVP profile) for the RTP relay');
    $c->loc("RTCP Feedback Mode");
    $c->loc('Choose the logic for local RTCP feedback (AVPF profile) for the RTP relay');
    $c->loc("CloudPBX Hunt Policy");
    $c->loc('The hunting policy for PBX hunt groups.');
    $c->loc("CloudPBX Serial Hunt Timeout");
    $c->loc('The serial timeout for hunting in PBX hunt groups.');
    $c->loc("CloudPBX Hunt Group List");
    $c->loc('The members (as SIP URIs) of the PBX hunt group.');
    $c->loc("CLI of CloudPBX Pilot Subscriber");
    $c->loc('The base CLI for the PBX extension.');
    $c->loc('User-Agent header passing mode.');
    $c->loc('The string to be used as a User-Agent header replacement if ua_header_mode is set to "replace".');
    $c->loc('The content to put into the History-Info  header for outbound calls (use "None" to not set header at all)');
    $c->loc("Export subscriber to shared XMPP Buddylist");
    $c->loc('Export this subscriber into the shared XMPP buddy list for the customer.');
    $c->loc("Network-Provided Display Name");
    $c->loc('The network-provided display name used for XMPP contacts and optionally SIP outbound header manipulation.');
    $c->loc("Customer Sound Set");
    $c->loc('Customer specific Sound Set used for PBX auto-attendant prompts, customer-specific announcements etc.');
    $c->loc('Force calls from this user/domain/peer to be routed to PSTN even if the callee is local. Use with caution, as this setting may increase your costs! When enabling this option in a peer, make sure you trust it, as the NGCP will become an open relay for it!');

    return;
}

1;

=head1 LICENSE

This library is free software. You can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

